---
VIBE CODING HACKATHON - PROMPTS USED
Project Name: Tell Me About It.
Team Name: Mesoma & Siyeon
Submission Date: 22nd June 2025
---

1. **First Prompt for UI Design in V0 | Generated by Gemini**
You are designing the initial greeting for a speech-based conversational chatbot for SA victims.
The chatbot's purpose is to help users report incidents by collecting necessary information and autofilling an official online report form.
It is NOT a therapist or a crisis counselor.
The chatbot must prioritize user safety, privacy, and a trauma-informed approach.

Craft an initial greeting that includes:
1.  A clear statement that the user is speaking with an AI.
2.  A brief, empathetic acknowledgement of the sensitive nature of their situation.
3.  A clear explanation of the chatbot's function (information collection for reporting, autofilling form).
4.  An explicit statement that the chatbot is NOT a substitute for professional human support (e.g., therapist, crisis hotline, legal counsel).
5.  An assurance of data privacy and confidentiality.
6.  A clear request for consent to proceed, with options to continue or to be directed to other resources.

Example tone: Empathetic, clear, professional, non-judgmental.
Output format: The full greeting script, followed by options for the user.

2. **Second Prompt for UI design in V0 | Generated by Gemini** 
You are an empathetic, trauma-informed AI chatbot designed to help gather information for an SA report.
The current goal is to ascertain the **date of the incident**.

Your task is to:
1.  Initiate the query with a gentle, open-ended question.
2.  If the user provides an ambiguous or partial answer, ask polite, clarifying follow-up questions to get a specific date (e.g., "DD/MM/YYYY").
3.  If the user indicates they don't know or can't recall, offer an alternative (e.g., "approximately when?" or "is there a period you remember?").
4.  Ensure the language remains neutral and non-leading.

Desired information: Full date (e.g., "October 26, 2023").
Output format: A sequence of chatbot prompts and potential follow-ups.

**Consider these aspects for the chatbot's responses:**
* Empathy for difficulty recalling.
* Patience.
* Focus on getting the most accurate information possible without pressuring.

3. **Additional Prompt for UI Design in V0**
create a chatbot interface in the style of ChatGPT. clean, cool toned (offwhite/blue-ish accents) so that it can serve as a voice activated chatbot for conversational purposes. include all necessary buttons for good UX/usability. the user base will be trauma victims so any text should have a calm tone.


4. **Example Prompt for Implementation in Cursor** 
You are an expert in speech processing and data security - you want to have a fully speech based interface for the MVP - this was your original vision. Modify the project so that the Eleven Labs API is used as the basis of the entire conversatioal chatbot. Ensure data is kept securely and anonymised where possible if possible. This may require encryption or other methods but GDPR compliance (UK) and victim anonymity is utmost

5. **Example Prompt for Implementation in Cursor** 
You are a senior software engineer in need of testing the software so far. Create a basic but fully working speech based chatbot interface using Eleven Labs. there can be a text based fallback but it should be spech-first. Ensure the code is runnable. Include tests with log statements

6. **Example Prompt for Implementation in Cursor**
This is a SA trauma response chatbot designed to automate the reporting process following an incident. This is the purpose of the form currently used in the interface. The fields are dynamically updated each time the user provides relevant information - even if the information is implied. I will move onto the mechanics of this later (perhaps word embeddings, or other NLP techniques) along with the API used to enable the speech processing and automated voice functionalities. For now focus on loading the json data correctly into the current form (this is the first section of many - about 7). The section dividers can be added later so that the entire questionnaire remains as one scrollable section (similar to the current UI). The json for the first question can be found in app/api/data/forms

7. **Example Prompt for Implementation in Cursor**
Ok great. I've committed all our JSON files. now to update the structure of the form as necessary. maintain all styling (including its simple and accessible scrolling nature) but ensure all question sections can be accessed within the form, with the appropriate data/field types, accoutning for conditional sections, where necessary. You are an experienced full stack engineer - use your knowledge of UX and software developement to figure out the best way to implement this complex json structure visually. try not to change things where they dont need to be changed.

8. **Example Prompt for Implementation in Cursor**
ok i'll try to get the software working for a completely text-based approach first. i.e sentiment extraction and form autofilling (live? if possible).  also at this stage, i would like to consider the implementation for the actual chatbot output - will it use statistical methods? or hybrid methods? or something else (i.e libraries or apis, but what about security risks..)- because compliance with GDPR (UK) and victim anonymity is utmost. for instance, could all the user input be anonymised or encrypted where possible (when it is not necessary for the form)? you are a senior NLP engineer and security expert - you think of the best data secrurity strategy for this specific use case. after this is done, we can then discuss how to try to use eleven labs TTS for chatbot responses and finally STT for user input. then the MVP should be basically finished! 


9. **Example Prompt for Implementation/Testing in Cursor**
ok this isnt working the best Yeah I'm Dorothy but idk if I can speak for long
Thank you for sharing that. Can you tell me about the incident you want to report?
ye i was with my mum since i'm only 15 and i was waiting around for her in my wheelchair while she went to the toilet. but some man came up to me
Thank you for sharing that. Can you tell me about the incident you want to report? - and the age section hasnt been filled in. for now can u make the nlp pipeline the default for the application (no more explicit button) but are youre sure this method is good enough? i want decent accuracy but obvs if using an LLM is too slow then we should acknowledge the tradeoffs and be smart about the desired implemntation


10. **Example Output from Cursor | Follow-up from Prompt Concerned about Data Sensitivity**
Summary: Security & Privacy Guarantees
‚úÖ Absolute Security Measures Implemented:
Zero External Data Transmission
No API calls to external services
No LLM integration that could expose trauma content
All processing happens locally in the browser
Complete User Anonymity
No user data stored on servers
Session storage only - data cleared when browser closes
No persistent tracking or profiling
Secure Logging
No sensitive content logged (names, trauma details, personal info)
Only metadata logged (confidence scores, field counts)
User privacy maintained in all logs
Input Sanitization
Removes dangerous content and script tags
Prevents XSS and injection attacks
Secure handling of all user input
GDPR Compliance
Right to be forgotten (automatic data deletion)
Data minimization (only essential data processed)
Purpose limitation (form completion only)
Complete transparency
   What We Explicitly Avoid:
‚ùå LLM APIs - No external AI services that could store trauma content
‚ùå Third-party processing - No data sent to external providers
‚ùå Persistent storage - No server-side data retention
‚ùå Analytics tracking - No user behavior monitoring
‚ùå Sensitive logging - No trauma narratives or personal details in logs
üîí Current Architecture:
Apply to .gitignore
User Input ‚Üí Local NLP Processing ‚Üí Form Population ‚Üí Session Storage
     ‚Üì              ‚Üì                    ‚Üì              ‚Üì
   Sanitized    No External Calls    Secure Updates   Auto-Cleared
üõ°Ô∏è Privacy Guarantees:
Your trauma content never leaves your device
No third-party has access to your information
Data is automatically deleted when you close the browser
No permanent record of your experience is created
Complete anonymity is maintained throughout the process
The system is designed to be as secure as possible for trauma reporting, prioritizing user safety and privacy above all other considerations. The lightweight NLP approach, while less sophisticated than LLMs, ensures that sensitive trauma content remains completely private and secure.
Would you like me to add any additional security measures or explain any specific aspect of the privacy implementation?

11. **Example Prompt for Implementation/Testing in Cursor**
ok interesting - again - Thank you for sharing that. Can you tell me about the incident you experienced?
yeah i was in central london and i was waiting outside the toilets in my wheelchair for my mum because i'm only 15. some random guy came up to me
Thank you for sharing that. Can you tell me about the incident you experienced? . can u keep track of previously stored messages so that no 2 are ever returned sequentially bc it's a bit annoying. also the purpose of the chatbot is yes to act as some initial support for the victim but is to overall work to extract information. idk if a more intelligent model is needed for this but can the aim should be to answer related questions based off of the information provided so that ultimately the form is as fully filled in as possible before exposing the victim to the potentially traumatic experience of having to manually enter everything (i.e the shortcoming of the original system)

12. **Example Prompt for Implementation in Cursor | Attempt to Improve Buggy Functionality**
ok now i need i need to figure out key integration for the eleven labs voices - but also the questions are super circular - the same questions repeat - there needs to be some sort of memory system (or i guess just using the data values being added to field so that you avoid asking questions that are directly linked to questions with values already filled in. You are an expert in AI aegnts(even statistical/simple models like this) so use yout best technical knowledge to implement this in a way that first and foremost avoids repeat questions (avoids making the reporting process longer than necessary) and then secondly tries to traverse all none answered questions and attempt to get them answered in a natural way (i.e using the pre-built rule based system we have).

13. **Example Prompt for Implementation in Cursor**
Ok go through the entire code and ensure that the intelligent response takes priority - where you deem fit. you are a senior NLP engineer. you can use your intuition to determine whether this is necessary or not. try to prioritise that over niche use cases. it is better to have an intelligent and generalisable system that uses advancedd (but sercure) nlp rather than a system that responds well in a vrey specific set of circumstances but fails everywhere else
